{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/chat/chat.services.ts","webpack:///./src/app/chat/chatPage.component.html","webpack:///./src/app/chat/chatPage.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".jumbotron { margin: 0; padding: 0; height: 100%; width: 100%; background-color: lightblue;  }\\r\\n\\r\\n.panel-body.chatWrap{max-width: 900px; height: 400px; overflow-y: scroll;\\r\\n    background-color:lightblue; }\\r\\n\\r\\ntextarea {background-color: lightyellow; border: firebrick; border-radius: 0.5em}\\r\\n\\r\\n#chatPage {background-image: url('footprint.jpg') }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxVQUFVLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsNEJBQTRCLEdBQUc7O0FBRTlGLHFCQUFxQixpQkFBaUIsQ0FBQyxjQUFjLENBQUMsbUJBQW1CO0lBQ3JFLDJCQUEyQixFQUFFOztBQUNqQyxVQUFVLDhCQUE4QixDQUFDLGtCQUFrQixDQUFDLG9CQUFvQixDQUFDOztBQUVqRixXQUFXLHNDQUFxRCxFQUFFIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuanVtYm90cm9uIHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBoZWlnaHQ6IDEwMCU7IHdpZHRoOiAxMDAlOyBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7ICB9XHJcblxyXG4ucGFuZWwtYm9keS5jaGF0V3JhcHttYXgtd2lkdGg6IDkwMHB4OyBoZWlnaHQ6IDQwMHB4OyBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Ymx1ZTsgfVxyXG50ZXh0YXJlYSB7YmFja2dyb3VuZC1jb2xvcjogbGlnaHR5ZWxsb3c7IGJvcmRlcjogZmlyZWJyaWNrOyBib3JkZXItcmFkaXVzOiAwLjVlbX1cclxuXHJcbiNjaGF0UGFnZSB7YmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2Fzc2V0cy9pbWFnZXMvZm9vdHByaW50LmpwZykgfVxyXG4iXX0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MEANchat';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport{RouterModule} from '@angular/router';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { chatComponent } from './chat/chat.component';\nimport { chatService } from './chat/chat.services';\nimport { chatPageComponent } from './chat/chatPage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    chatComponent,\n    chatPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path:'', redirectTo: '/entry', pathMatch: 'full'},\n      {path: 'entry', component:chatComponent},\n      {path: 'chat', component:chatPageComponent}\n    ])\n    \n  ],\n  providers: [chatService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n<head>    \\r\\n    <title>MEAN chat</title>\\r\\n</head>\\r\\n<body id=\\\"mainPage\\\" >\\r\\n    <div class=\\\"container\\\" >\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"jumbotron\\\"  align=\\\"center\\\">\\r\\n                <h1>Have fun!!!</h1>\\r\\n                <img class=\\\"img-rectangle\\\" src=\\\"../assets/images/footprint.jpg\\\"><br><br>\\r\\n                <form #form1 = \\\"ngForm\\\" (ngSubmit) = OnSubmit(form1) style=\\\"display: inline-block\\\">\\r\\n                    <div class=\\\"form-group \\\">                        \\r\\n                        <input type=\\\"text\\\" required class=\\\"form-control\\\" name=\\\"Cname\\\" #Cname = \\\"ngModel\\\"\\r\\n                        [(ngModel)] = \\\"chatName\\\" placeholder=\\\"Enter your name\\\">\\r\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"Cname.touched && !Cname.valid\\\">\\r\\n                            <div *ngIf=\\\"Cname.errors.required\\\">Chat name is required</div>                                                              \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <button style=\\\"display: inline-block\\\" class=\\\"btn btn-danger\\\" type=\\\"Submit\\\" [disabled]=\\\"!form1.valid\\\">Enter</button>                                  \\r\\n                </form>     \\r\\n                <div *ngIf = \\\"userCreated == false\\\">\\r\\n                    <h2>User name selected is already in use</h2>\\r\\n                </div>           \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</body>\\r\\n</html>\"","import {Component} from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport { chatService } from './chat.services';\r\nimport {Router} from \"@angular/router\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'chat-app',\r\n    templateUrl: './chat.component.html',\r\n    styleUrls: ['../app.component.css']\r\n})\r\n\r\nexport class chatComponent{\r\n    chatName:String;\r\n    userCreated:Boolean = true;\r\n    userList:Array<{user:String, msg:String}>= [];\r\n\r\n    constructor(private _chatService: chatService, private _router: Router){\r\n        this._chatService.newUserJoined().subscribe((data)=>{\r\n            console.log('user info reached the component' + data.user);\r\n            this.userList.push(data);\r\n            if (this.chatName == data.user){\r\n                this._router.navigate(['/chat', {userName: data.user}]);\r\n            }            \r\n        });\r\n\r\n        this._chatService.newUserFailed().subscribe((data)=>{\r\n            console.log('user name already exists');\r\n            this.userCreated = false;\r\n        })\r\n    }\r\n\r\n    OnSubmit(form: NgForm){\r\n        console.log('sent from component->', form.value)\r\n        this._chatService.createUser(form.value);\r\n    } \r\n\r\n}","\r\nimport {Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as io from 'socket.io-client';\r\nimport{Observable} from 'rxjs';  \r\nimport { map, catchError } from 'rxjs/operators';\r\nimport {user} from './chat.models';\r\n\r\n@Injectable()\r\n\r\nexport class chatService{\r\n    userCreated:Boolean;\r\n\r\n    private _url = \"adduser\";\r\n    private _socket = io(\"\");\r\n    //constructor (private _socket: HttpClient){}\r\n\r\n    createUser(user){\r\n        const body: user = {\r\n            chatName : user.Cname\r\n        }\r\n        console.log('user name being sent -->', body)\r\n        this._socket.emit('new user', body);\r\n        \r\n    }\r\n\r\n    newUserJoined(){\r\n        var observable = new Observable<{user:String, msg:String}>(observer =>{\r\n            this._socket.on('user created', function(data){\r\n                console.log('user info reached services')\r\n                observer.next(data);\r\n            });\r\n            return function(){\r\n                this._socket.disconnect();\r\n            }            \r\n        });\r\n        return observable;\r\n\r\n    }\r\n\r\n    newUserFailed(){\r\n        var observable = new Observable<{user:String, msg:String}>(observer =>{\r\n            this._socket.on('user creation failed', function(data){\r\n                console.log('user fail info reached services');\r\n                observer.next(data);\r\n            });\r\n            return function(){\r\n                this._socket.disconnect();\r\n            }            \r\n        });\r\n        return observable;\r\n\r\n    }\r\n\r\n    sendMessage(data){\r\n        console.log('inside the sendmessage in services ' + data.user + ' ' + data.msg)\r\n        this._socket.emit('send message', data);\r\n\r\n    }\r\n\r\n    chatMessage(){\r\n        var observable = new Observable<{user:String, msg:String}>(observer =>{\r\n            this._socket.on('chat message', function(data){\r\n                console.log('recieved chat message in services' + data.user);\r\n                observer.next(data);\r\n            });\r\n            return function(){\r\n                this._socket.disconnect();\r\n            }            \r\n        });\r\n        return observable;\r\n\r\n    }\r\n\r\n    onlineUsers(){\r\n        var observable = new Observable<Array<String>>(observer =>{\r\n            this._socket.on('userList', function(data){\r\n                console.log('list of users' + data[0]);\r\n                observer.next(data);\r\n            });\r\n            return function(){\r\n                this._socket.disconnect();\r\n            }            \r\n        });\r\n        return observable;\r\n\r\n    }\r\n\r\n    userLeft(data){\r\n        this._socket.emit('user left', data);\r\n    }\r\n\r\n    privateFailed(){\r\n        var observable = new Observable<{user:String, targetUser:String}>(observer =>{\r\n            this._socket.on('private failed', function(data){\r\n                console.log('list of users' + data.user + ' ' + data.targetUser);\r\n                observer.next(data);\r\n            });\r\n            return function(){\r\n                this._socket.disconnect();\r\n            }            \r\n        });\r\n        return observable;        \r\n    }\r\n\r\n}","module.exports = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\">\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\r\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\r\\n    <title>Document</title>\\r\\n</head>\\r\\n<body id=\\\"chatPage\\\">\\r\\n    <div id=\\\"chatWindow\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 panel panel-primary col-sm-offset-1\\\">\\r\\n                    <div class=\\\"panel-body chatWrap\\\">\\r\\n                        <div id=\\\"chatWrap\\\" >\\r\\n                            <div  id=\\\"chat\\\"  *ngFor = \\\"let each of chatMessages\\\">\\r\\n                                <div *ngIf = \\\"each.user == userName\\\">\\r\\n                                    <p align=\\\"right\\\">{{each.user}}:{{each.msg}}</p>\\r\\n                                </div> \\r\\n                                <div *ngIf  = \\\"each.user != userName\\\">\\r\\n                                    <p align=\\\"left\\\">{{each.user}}:{{each.msg}}</p>\\r\\n                                </div>                                                          \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 col-sm-offset-1  panel panel-default\\\">\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                        <h4>Currently Online</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <div id=\\\"users\\\" *ngFor = \\\"let each of onlineUserList\\\">\\r\\n                            <p>{{each}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-offset-2\\\">\\r\\n                    <h4 align=\\\"right\\\">Invite your friends to the chat by clicking <a href=\\\"#\\\" target=\\\"_blank\\\">Link</a></h4>\\r\\n                </div>                    \\r\\n            </div>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4 col-md-offset-1\\\">\\r\\n                    <form #formMessage = \\\"ngForm\\\" (keydown.enter) = sendMessage(formMessage) id=\\\"message-box\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <textarea  name=\\\"message\\\" #message = \\\"ngModel\\\" [(ngModel)]= \\\"userMessage\\\" id=\\\"message\\\" cols=\\\"75\\\" rows=\\\"5\\\" placeholder=\\\"enter your message\\\"></textarea>\\r\\n                        </div>                        \\r\\n                    </form>\\r\\n                    <div *ngIf = \\\"privateFailedBool\\\">\\r\\n                        <h3>{{privateFailed }}is not online</h3>\\r\\n                    </div>\\r\\n                    <h4>To send a personal message add '@' in before the name and give a space!</h4>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</body>\\r\\n</html>\"","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { ParamMap, Router, ActivatedRoute } from '@angular/router';\r\nimport {NgForm} from '@angular/forms';\r\nimport { chatService } from './chat.services';\r\n\r\n\r\n@Component({\r\n    selector: 'chat-Page',\r\n    templateUrl: './chatPage.component.html',\r\n    styleUrls: ['../app.component.css']\r\n})\r\n\r\nexport class chatPageComponent implements OnInit{\r\n    userName:String;\r\n    userMessage:String;\r\n    chatMessages:Array<{user:String, msg:String}>= [];\r\n    onlineUserList:Array<String>=[];\r\n    privateFailed:String;\r\n    privateFailedBool:Boolean = false;\r\n\r\n    constructor(private _actRoute: ActivatedRoute, private _router:Router, private _chatSerice: chatService){\r\n        this._chatSerice.chatMessage().subscribe((data)=>{\r\n            this.chatMessages.push(data);\r\n            this.privateFailedBool = false;\r\n        });\r\n\r\n        this._chatSerice.onlineUsers().subscribe((data)=>{\r\n            this.onlineUserList = [];\r\n            console.log('online users component->' + data[0])\r\n             for (let i = 0; i< data.length ; i++){\r\n                console.log('online users component loop->' + data[i])\r\n                this.onlineUserList.push(data[i]);\r\n            } \r\n            \r\n        });\r\n\r\n        this._chatSerice.privateFailed().subscribe((data)=>{\r\n            this.privateFailedBool= true;\r\n            this.privateFailed = data.targetUser;\r\n        })\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.userName = this._actRoute.snapshot.paramMap.get('userName');\r\n\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        console.log('destroy socket')\r\n        this._chatSerice.userLeft({user: this.userName});\r\n    }\r\n\r\n    sendMessage(form: NgForm){\r\n        this.privateFailedBool = false;\r\n        console.log('message in component-->' + form.value.message);\r\n        this._chatSerice.sendMessage({user: this.userName, msg: this.userMessage});\r\n        form.reset();\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}